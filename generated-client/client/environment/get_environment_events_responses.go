// Code generated by go-swagger; DO NOT EDIT.

package environment

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/equinor/radix-cicd-canary/generated-client/models"
)

// GetEnvironmentEventsReader is a Reader for the GetEnvironmentEvents structure.
type GetEnvironmentEventsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetEnvironmentEventsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetEnvironmentEventsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetEnvironmentEventsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetEnvironmentEventsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetEnvironmentEventsOK creates a GetEnvironmentEventsOK with default headers values
func NewGetEnvironmentEventsOK() *GetEnvironmentEventsOK {
	return &GetEnvironmentEventsOK{}
}

/* GetEnvironmentEventsOK describes a response with status code 200, with default header values.

Successful get environment events
*/
type GetEnvironmentEventsOK struct {
	Payload *models.Event
}

func (o *GetEnvironmentEventsOK) Error() string {
	return fmt.Sprintf("[GET /applications/{appName}/environments/{envName}/events][%d] getEnvironmentEventsOK  %+v", 200, o.Payload)
}
func (o *GetEnvironmentEventsOK) GetPayload() *models.Event {
	return o.Payload
}

func (o *GetEnvironmentEventsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Event)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetEnvironmentEventsUnauthorized creates a GetEnvironmentEventsUnauthorized with default headers values
func NewGetEnvironmentEventsUnauthorized() *GetEnvironmentEventsUnauthorized {
	return &GetEnvironmentEventsUnauthorized{}
}

/* GetEnvironmentEventsUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetEnvironmentEventsUnauthorized struct {
}

func (o *GetEnvironmentEventsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /applications/{appName}/environments/{envName}/events][%d] getEnvironmentEventsUnauthorized ", 401)
}

func (o *GetEnvironmentEventsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetEnvironmentEventsNotFound creates a GetEnvironmentEventsNotFound with default headers values
func NewGetEnvironmentEventsNotFound() *GetEnvironmentEventsNotFound {
	return &GetEnvironmentEventsNotFound{}
}

/* GetEnvironmentEventsNotFound describes a response with status code 404, with default header values.

Not found
*/
type GetEnvironmentEventsNotFound struct {
}

func (o *GetEnvironmentEventsNotFound) Error() string {
	return fmt.Sprintf("[GET /applications/{appName}/environments/{envName}/events][%d] getEnvironmentEventsNotFound ", 404)
}

func (o *GetEnvironmentEventsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
