// Code generated by go-swagger; DO NOT EDIT.

package environment

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// StartEnvironmentReader is a Reader for the StartEnvironment structure.
type StartEnvironmentReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *StartEnvironmentReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewStartEnvironmentOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewStartEnvironmentUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewStartEnvironmentNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewStartEnvironmentOK creates a StartEnvironmentOK with default headers values
func NewStartEnvironmentOK() *StartEnvironmentOK {
	return &StartEnvironmentOK{}
}

/*StartEnvironmentOK handles this case with default header values.

Environment started ok
*/
type StartEnvironmentOK struct {
}

func (o *StartEnvironmentOK) Error() string {
	return fmt.Sprintf("[POST /applications/{appName}/environments/{envName}/start][%d] startEnvironmentOK ", 200)
}

func (o *StartEnvironmentOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewStartEnvironmentUnauthorized creates a StartEnvironmentUnauthorized with default headers values
func NewStartEnvironmentUnauthorized() *StartEnvironmentUnauthorized {
	return &StartEnvironmentUnauthorized{}
}

/*StartEnvironmentUnauthorized handles this case with default header values.

Unauthorized
*/
type StartEnvironmentUnauthorized struct {
}

func (o *StartEnvironmentUnauthorized) Error() string {
	return fmt.Sprintf("[POST /applications/{appName}/environments/{envName}/start][%d] startEnvironmentUnauthorized ", 401)
}

func (o *StartEnvironmentUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewStartEnvironmentNotFound creates a StartEnvironmentNotFound with default headers values
func NewStartEnvironmentNotFound() *StartEnvironmentNotFound {
	return &StartEnvironmentNotFound{}
}

/*StartEnvironmentNotFound handles this case with default header values.

Not found
*/
type StartEnvironmentNotFound struct {
}

func (o *StartEnvironmentNotFound) Error() string {
	return fmt.Sprintf("[POST /applications/{appName}/environments/{envName}/start][%d] startEnvironmentNotFound ", 404)
}

func (o *StartEnvironmentNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
