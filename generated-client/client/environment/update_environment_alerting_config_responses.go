// Code generated by go-swagger; DO NOT EDIT.

package environment

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/equinor/radix-cicd-canary/generated-client/models"
)

// UpdateEnvironmentAlertingConfigReader is a Reader for the UpdateEnvironmentAlertingConfig structure.
type UpdateEnvironmentAlertingConfigReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateEnvironmentAlertingConfigReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpdateEnvironmentAlertingConfigOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewUpdateEnvironmentAlertingConfigBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewUpdateEnvironmentAlertingConfigUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewUpdateEnvironmentAlertingConfigForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewUpdateEnvironmentAlertingConfigNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewUpdateEnvironmentAlertingConfigInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewUpdateEnvironmentAlertingConfigOK creates a UpdateEnvironmentAlertingConfigOK with default headers values
func NewUpdateEnvironmentAlertingConfigOK() *UpdateEnvironmentAlertingConfigOK {
	return &UpdateEnvironmentAlertingConfigOK{}
}

/* UpdateEnvironmentAlertingConfigOK describes a response with status code 200, with default header values.

Successful alerts config update
*/
type UpdateEnvironmentAlertingConfigOK struct {
	Payload *models.AlertingConfig
}

func (o *UpdateEnvironmentAlertingConfigOK) Error() string {
	return fmt.Sprintf("[PUT /applications/{appName}/environments/{envName}/alerting][%d] updateEnvironmentAlertingConfigOK  %+v", 200, o.Payload)
}
func (o *UpdateEnvironmentAlertingConfigOK) GetPayload() *models.AlertingConfig {
	return o.Payload
}

func (o *UpdateEnvironmentAlertingConfigOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.AlertingConfig)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateEnvironmentAlertingConfigBadRequest creates a UpdateEnvironmentAlertingConfigBadRequest with default headers values
func NewUpdateEnvironmentAlertingConfigBadRequest() *UpdateEnvironmentAlertingConfigBadRequest {
	return &UpdateEnvironmentAlertingConfigBadRequest{}
}

/* UpdateEnvironmentAlertingConfigBadRequest describes a response with status code 400, with default header values.

Invalid configuration
*/
type UpdateEnvironmentAlertingConfigBadRequest struct {
}

func (o *UpdateEnvironmentAlertingConfigBadRequest) Error() string {
	return fmt.Sprintf("[PUT /applications/{appName}/environments/{envName}/alerting][%d] updateEnvironmentAlertingConfigBadRequest ", 400)
}

func (o *UpdateEnvironmentAlertingConfigBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateEnvironmentAlertingConfigUnauthorized creates a UpdateEnvironmentAlertingConfigUnauthorized with default headers values
func NewUpdateEnvironmentAlertingConfigUnauthorized() *UpdateEnvironmentAlertingConfigUnauthorized {
	return &UpdateEnvironmentAlertingConfigUnauthorized{}
}

/* UpdateEnvironmentAlertingConfigUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type UpdateEnvironmentAlertingConfigUnauthorized struct {
}

func (o *UpdateEnvironmentAlertingConfigUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /applications/{appName}/environments/{envName}/alerting][%d] updateEnvironmentAlertingConfigUnauthorized ", 401)
}

func (o *UpdateEnvironmentAlertingConfigUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateEnvironmentAlertingConfigForbidden creates a UpdateEnvironmentAlertingConfigForbidden with default headers values
func NewUpdateEnvironmentAlertingConfigForbidden() *UpdateEnvironmentAlertingConfigForbidden {
	return &UpdateEnvironmentAlertingConfigForbidden{}
}

/* UpdateEnvironmentAlertingConfigForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type UpdateEnvironmentAlertingConfigForbidden struct {
}

func (o *UpdateEnvironmentAlertingConfigForbidden) Error() string {
	return fmt.Sprintf("[PUT /applications/{appName}/environments/{envName}/alerting][%d] updateEnvironmentAlertingConfigForbidden ", 403)
}

func (o *UpdateEnvironmentAlertingConfigForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateEnvironmentAlertingConfigNotFound creates a UpdateEnvironmentAlertingConfigNotFound with default headers values
func NewUpdateEnvironmentAlertingConfigNotFound() *UpdateEnvironmentAlertingConfigNotFound {
	return &UpdateEnvironmentAlertingConfigNotFound{}
}

/* UpdateEnvironmentAlertingConfigNotFound describes a response with status code 404, with default header values.

Not found
*/
type UpdateEnvironmentAlertingConfigNotFound struct {
}

func (o *UpdateEnvironmentAlertingConfigNotFound) Error() string {
	return fmt.Sprintf("[PUT /applications/{appName}/environments/{envName}/alerting][%d] updateEnvironmentAlertingConfigNotFound ", 404)
}

func (o *UpdateEnvironmentAlertingConfigNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateEnvironmentAlertingConfigInternalServerError creates a UpdateEnvironmentAlertingConfigInternalServerError with default headers values
func NewUpdateEnvironmentAlertingConfigInternalServerError() *UpdateEnvironmentAlertingConfigInternalServerError {
	return &UpdateEnvironmentAlertingConfigInternalServerError{}
}

/* UpdateEnvironmentAlertingConfigInternalServerError describes a response with status code 500, with default header values.

Internal server error
*/
type UpdateEnvironmentAlertingConfigInternalServerError struct {
}

func (o *UpdateEnvironmentAlertingConfigInternalServerError) Error() string {
	return fmt.Sprintf("[PUT /applications/{appName}/environments/{envName}/alerting][%d] updateEnvironmentAlertingConfigInternalServerError ", 500)
}

func (o *UpdateEnvironmentAlertingConfigInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
