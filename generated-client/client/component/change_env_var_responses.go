// Code generated by go-swagger; DO NOT EDIT.

package component

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// ChangeEnvVarReader is a Reader for the ChangeEnvVar structure.
type ChangeEnvVarReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ChangeEnvVarReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewChangeEnvVarOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewChangeEnvVarBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewChangeEnvVarUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewChangeEnvVarForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewChangeEnvVarNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewChangeEnvVarConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewChangeEnvVarInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewChangeEnvVarOK creates a ChangeEnvVarOK with default headers values
func NewChangeEnvVarOK() *ChangeEnvVarOK {
	return &ChangeEnvVarOK{}
}

/* ChangeEnvVarOK describes a response with status code 200, with default header values.

success
*/
type ChangeEnvVarOK struct {
}

func (o *ChangeEnvVarOK) Error() string {
	return fmt.Sprintf("[PATCH /applications/{appName}/environments/{envName}/components/{componentName}/envvars][%d] changeEnvVarOK ", 200)
}

func (o *ChangeEnvVarOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewChangeEnvVarBadRequest creates a ChangeEnvVarBadRequest with default headers values
func NewChangeEnvVarBadRequest() *ChangeEnvVarBadRequest {
	return &ChangeEnvVarBadRequest{}
}

/* ChangeEnvVarBadRequest describes a response with status code 400, with default header values.

Invalid application
*/
type ChangeEnvVarBadRequest struct {
}

func (o *ChangeEnvVarBadRequest) Error() string {
	return fmt.Sprintf("[PATCH /applications/{appName}/environments/{envName}/components/{componentName}/envvars][%d] changeEnvVarBadRequest ", 400)
}

func (o *ChangeEnvVarBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewChangeEnvVarUnauthorized creates a ChangeEnvVarUnauthorized with default headers values
func NewChangeEnvVarUnauthorized() *ChangeEnvVarUnauthorized {
	return &ChangeEnvVarUnauthorized{}
}

/* ChangeEnvVarUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type ChangeEnvVarUnauthorized struct {
}

func (o *ChangeEnvVarUnauthorized) Error() string {
	return fmt.Sprintf("[PATCH /applications/{appName}/environments/{envName}/components/{componentName}/envvars][%d] changeEnvVarUnauthorized ", 401)
}

func (o *ChangeEnvVarUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewChangeEnvVarForbidden creates a ChangeEnvVarForbidden with default headers values
func NewChangeEnvVarForbidden() *ChangeEnvVarForbidden {
	return &ChangeEnvVarForbidden{}
}

/* ChangeEnvVarForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type ChangeEnvVarForbidden struct {
}

func (o *ChangeEnvVarForbidden) Error() string {
	return fmt.Sprintf("[PATCH /applications/{appName}/environments/{envName}/components/{componentName}/envvars][%d] changeEnvVarForbidden ", 403)
}

func (o *ChangeEnvVarForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewChangeEnvVarNotFound creates a ChangeEnvVarNotFound with default headers values
func NewChangeEnvVarNotFound() *ChangeEnvVarNotFound {
	return &ChangeEnvVarNotFound{}
}

/* ChangeEnvVarNotFound describes a response with status code 404, with default header values.

Not found
*/
type ChangeEnvVarNotFound struct {
}

func (o *ChangeEnvVarNotFound) Error() string {
	return fmt.Sprintf("[PATCH /applications/{appName}/environments/{envName}/components/{componentName}/envvars][%d] changeEnvVarNotFound ", 404)
}

func (o *ChangeEnvVarNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewChangeEnvVarConflict creates a ChangeEnvVarConflict with default headers values
func NewChangeEnvVarConflict() *ChangeEnvVarConflict {
	return &ChangeEnvVarConflict{}
}

/* ChangeEnvVarConflict describes a response with status code 409, with default header values.

Conflict
*/
type ChangeEnvVarConflict struct {
}

func (o *ChangeEnvVarConflict) Error() string {
	return fmt.Sprintf("[PATCH /applications/{appName}/environments/{envName}/components/{componentName}/envvars][%d] changeEnvVarConflict ", 409)
}

func (o *ChangeEnvVarConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewChangeEnvVarInternalServerError creates a ChangeEnvVarInternalServerError with default headers values
func NewChangeEnvVarInternalServerError() *ChangeEnvVarInternalServerError {
	return &ChangeEnvVarInternalServerError{}
}

/* ChangeEnvVarInternalServerError describes a response with status code 500, with default header values.

Internal server error
*/
type ChangeEnvVarInternalServerError struct {
}

func (o *ChangeEnvVarInternalServerError) Error() string {
	return fmt.Sprintf("[PATCH /applications/{appName}/environments/{envName}/components/{componentName}/envvars][%d] changeEnvVarInternalServerError ", 500)
}

func (o *ChangeEnvVarInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
