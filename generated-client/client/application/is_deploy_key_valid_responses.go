// Code generated by go-swagger; DO NOT EDIT.

package application

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// IsDeployKeyValidReader is a Reader for the IsDeployKeyValid structure.
type IsDeployKeyValidReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *IsDeployKeyValidReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewIsDeployKeyValidOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewIsDeployKeyValidUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewIsDeployKeyValidNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewIsDeployKeyValidOK creates a IsDeployKeyValidOK with default headers values
func NewIsDeployKeyValidOK() *IsDeployKeyValidOK {
	return &IsDeployKeyValidOK{}
}

/*IsDeployKeyValidOK handles this case with default header values.

Deploy key is valid
*/
type IsDeployKeyValidOK struct {
}

func (o *IsDeployKeyValidOK) Error() string {
	return fmt.Sprintf("[GET /applications/{appName}/deploykey-valid][%d] isDeployKeyValidOK ", 200)
}

func (o *IsDeployKeyValidOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewIsDeployKeyValidUnauthorized creates a IsDeployKeyValidUnauthorized with default headers values
func NewIsDeployKeyValidUnauthorized() *IsDeployKeyValidUnauthorized {
	return &IsDeployKeyValidUnauthorized{}
}

/*IsDeployKeyValidUnauthorized handles this case with default header values.

Unauthorized
*/
type IsDeployKeyValidUnauthorized struct {
}

func (o *IsDeployKeyValidUnauthorized) Error() string {
	return fmt.Sprintf("[GET /applications/{appName}/deploykey-valid][%d] isDeployKeyValidUnauthorized ", 401)
}

func (o *IsDeployKeyValidUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewIsDeployKeyValidNotFound creates a IsDeployKeyValidNotFound with default headers values
func NewIsDeployKeyValidNotFound() *IsDeployKeyValidNotFound {
	return &IsDeployKeyValidNotFound{}
}

/*IsDeployKeyValidNotFound handles this case with default header values.

Not found
*/
type IsDeployKeyValidNotFound struct {
}

func (o *IsDeployKeyValidNotFound) Error() string {
	return fmt.Sprintf("[GET /applications/{appName}/deploykey-valid][%d] isDeployKeyValidNotFound ", 404)
}

func (o *IsDeployKeyValidNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
