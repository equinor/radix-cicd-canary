// Code generated by go-swagger; DO NOT EDIT.

package job

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/equinor/radix-cicd-canary/generated-client/jobserver/models"
)

// StopAllJobsReader is a Reader for the StopAllJobs structure.
type StopAllJobsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *StopAllJobsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewStopAllJobsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewStopAllJobsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewStopAllJobsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewStopAllJobsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /jobs/stop] stopAllJobs", response, response.Code())
	}
}

// NewStopAllJobsOK creates a StopAllJobsOK with default headers values
func NewStopAllJobsOK() *StopAllJobsOK {
	return &StopAllJobsOK{}
}

/*
StopAllJobsOK describes a response with status code 200, with default header values.

Successfully stopped jobs
*/
type StopAllJobsOK struct {
	Payload *models.Status
}

// IsSuccess returns true when this stop all jobs o k response has a 2xx status code
func (o *StopAllJobsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this stop all jobs o k response has a 3xx status code
func (o *StopAllJobsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this stop all jobs o k response has a 4xx status code
func (o *StopAllJobsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this stop all jobs o k response has a 5xx status code
func (o *StopAllJobsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this stop all jobs o k response a status code equal to that given
func (o *StopAllJobsOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the stop all jobs o k response
func (o *StopAllJobsOK) Code() int {
	return 200
}

func (o *StopAllJobsOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /jobs/stop][%d] stopAllJobsOK %s", 200, payload)
}

func (o *StopAllJobsOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /jobs/stop][%d] stopAllJobsOK %s", 200, payload)
}

func (o *StopAllJobsOK) GetPayload() *models.Status {
	return o.Payload
}

func (o *StopAllJobsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Status)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewStopAllJobsBadRequest creates a StopAllJobsBadRequest with default headers values
func NewStopAllJobsBadRequest() *StopAllJobsBadRequest {
	return &StopAllJobsBadRequest{}
}

/*
StopAllJobsBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type StopAllJobsBadRequest struct {
	Payload *models.Status
}

// IsSuccess returns true when this stop all jobs bad request response has a 2xx status code
func (o *StopAllJobsBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this stop all jobs bad request response has a 3xx status code
func (o *StopAllJobsBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this stop all jobs bad request response has a 4xx status code
func (o *StopAllJobsBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this stop all jobs bad request response has a 5xx status code
func (o *StopAllJobsBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this stop all jobs bad request response a status code equal to that given
func (o *StopAllJobsBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the stop all jobs bad request response
func (o *StopAllJobsBadRequest) Code() int {
	return 400
}

func (o *StopAllJobsBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /jobs/stop][%d] stopAllJobsBadRequest %s", 400, payload)
}

func (o *StopAllJobsBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /jobs/stop][%d] stopAllJobsBadRequest %s", 400, payload)
}

func (o *StopAllJobsBadRequest) GetPayload() *models.Status {
	return o.Payload
}

func (o *StopAllJobsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Status)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewStopAllJobsNotFound creates a StopAllJobsNotFound with default headers values
func NewStopAllJobsNotFound() *StopAllJobsNotFound {
	return &StopAllJobsNotFound{}
}

/*
StopAllJobsNotFound describes a response with status code 404, with default header values.

Not found
*/
type StopAllJobsNotFound struct {
	Payload *models.Status
}

// IsSuccess returns true when this stop all jobs not found response has a 2xx status code
func (o *StopAllJobsNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this stop all jobs not found response has a 3xx status code
func (o *StopAllJobsNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this stop all jobs not found response has a 4xx status code
func (o *StopAllJobsNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this stop all jobs not found response has a 5xx status code
func (o *StopAllJobsNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this stop all jobs not found response a status code equal to that given
func (o *StopAllJobsNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the stop all jobs not found response
func (o *StopAllJobsNotFound) Code() int {
	return 404
}

func (o *StopAllJobsNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /jobs/stop][%d] stopAllJobsNotFound %s", 404, payload)
}

func (o *StopAllJobsNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /jobs/stop][%d] stopAllJobsNotFound %s", 404, payload)
}

func (o *StopAllJobsNotFound) GetPayload() *models.Status {
	return o.Payload
}

func (o *StopAllJobsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Status)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewStopAllJobsInternalServerError creates a StopAllJobsInternalServerError with default headers values
func NewStopAllJobsInternalServerError() *StopAllJobsInternalServerError {
	return &StopAllJobsInternalServerError{}
}

/*
StopAllJobsInternalServerError describes a response with status code 500, with default header values.

Internal server error
*/
type StopAllJobsInternalServerError struct {
	Payload *models.Status
}

// IsSuccess returns true when this stop all jobs internal server error response has a 2xx status code
func (o *StopAllJobsInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this stop all jobs internal server error response has a 3xx status code
func (o *StopAllJobsInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this stop all jobs internal server error response has a 4xx status code
func (o *StopAllJobsInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this stop all jobs internal server error response has a 5xx status code
func (o *StopAllJobsInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this stop all jobs internal server error response a status code equal to that given
func (o *StopAllJobsInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the stop all jobs internal server error response
func (o *StopAllJobsInternalServerError) Code() int {
	return 500
}

func (o *StopAllJobsInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /jobs/stop][%d] stopAllJobsInternalServerError %s", 500, payload)
}

func (o *StopAllJobsInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /jobs/stop][%d] stopAllJobsInternalServerError %s", 500, payload)
}

func (o *StopAllJobsInternalServerError) GetPayload() *models.Status {
	return o.Payload
}

func (o *StopAllJobsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Status)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
