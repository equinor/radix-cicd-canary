// Code generated by go-swagger; DO NOT EDIT.

package batch

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/equinor/radix-cicd-canary/generated-client/jobserver/models"
)

// DeleteBatchReader is a Reader for the DeleteBatch structure.
type DeleteBatchReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteBatchReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDeleteBatchOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewDeleteBatchNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewDeleteBatchInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[DELETE /batches/{batchName}] deleteBatch", response, response.Code())
	}
}

// NewDeleteBatchOK creates a DeleteBatchOK with default headers values
func NewDeleteBatchOK() *DeleteBatchOK {
	return &DeleteBatchOK{}
}

/*
DeleteBatchOK describes a response with status code 200, with default header values.

Successful delete batch
*/
type DeleteBatchOK struct {
	Payload *models.Status
}

// IsSuccess returns true when this delete batch o k response has a 2xx status code
func (o *DeleteBatchOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this delete batch o k response has a 3xx status code
func (o *DeleteBatchOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete batch o k response has a 4xx status code
func (o *DeleteBatchOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete batch o k response has a 5xx status code
func (o *DeleteBatchOK) IsServerError() bool {
	return false
}

// IsCode returns true when this delete batch o k response a status code equal to that given
func (o *DeleteBatchOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the delete batch o k response
func (o *DeleteBatchOK) Code() int {
	return 200
}

func (o *DeleteBatchOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /batches/{batchName}][%d] deleteBatchOK %s", 200, payload)
}

func (o *DeleteBatchOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /batches/{batchName}][%d] deleteBatchOK %s", 200, payload)
}

func (o *DeleteBatchOK) GetPayload() *models.Status {
	return o.Payload
}

func (o *DeleteBatchOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Status)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteBatchNotFound creates a DeleteBatchNotFound with default headers values
func NewDeleteBatchNotFound() *DeleteBatchNotFound {
	return &DeleteBatchNotFound{}
}

/*
DeleteBatchNotFound describes a response with status code 404, with default header values.

Not found
*/
type DeleteBatchNotFound struct {
	Payload *models.Status
}

// IsSuccess returns true when this delete batch not found response has a 2xx status code
func (o *DeleteBatchNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete batch not found response has a 3xx status code
func (o *DeleteBatchNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete batch not found response has a 4xx status code
func (o *DeleteBatchNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete batch not found response has a 5xx status code
func (o *DeleteBatchNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this delete batch not found response a status code equal to that given
func (o *DeleteBatchNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the delete batch not found response
func (o *DeleteBatchNotFound) Code() int {
	return 404
}

func (o *DeleteBatchNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /batches/{batchName}][%d] deleteBatchNotFound %s", 404, payload)
}

func (o *DeleteBatchNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /batches/{batchName}][%d] deleteBatchNotFound %s", 404, payload)
}

func (o *DeleteBatchNotFound) GetPayload() *models.Status {
	return o.Payload
}

func (o *DeleteBatchNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Status)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteBatchInternalServerError creates a DeleteBatchInternalServerError with default headers values
func NewDeleteBatchInternalServerError() *DeleteBatchInternalServerError {
	return &DeleteBatchInternalServerError{}
}

/*
DeleteBatchInternalServerError describes a response with status code 500, with default header values.

Internal server error
*/
type DeleteBatchInternalServerError struct {
	Payload *models.Status
}

// IsSuccess returns true when this delete batch internal server error response has a 2xx status code
func (o *DeleteBatchInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete batch internal server error response has a 3xx status code
func (o *DeleteBatchInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete batch internal server error response has a 4xx status code
func (o *DeleteBatchInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete batch internal server error response has a 5xx status code
func (o *DeleteBatchInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this delete batch internal server error response a status code equal to that given
func (o *DeleteBatchInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the delete batch internal server error response
func (o *DeleteBatchInternalServerError) Code() int {
	return 500
}

func (o *DeleteBatchInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /batches/{batchName}][%d] deleteBatchInternalServerError %s", 500, payload)
}

func (o *DeleteBatchInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /batches/{batchName}][%d] deleteBatchInternalServerError %s", 500, payload)
}

func (o *DeleteBatchInternalServerError) GetPayload() *models.Status {
	return o.Payload
}

func (o *DeleteBatchInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Status)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
