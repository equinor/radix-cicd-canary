// Code generated by go-swagger; DO NOT EDIT.

package batch

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/equinor/radix-cicd-canary/generated-client/jobserver/models"
)

// CreateBatchReader is a Reader for the CreateBatch structure.
type CreateBatchReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateBatchReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewCreateBatchOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewCreateBatchBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewCreateBatchNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 422:
		result := NewCreateBatchUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewCreateBatchInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /batches] createBatch", response, response.Code())
	}
}

// NewCreateBatchOK creates a CreateBatchOK with default headers values
func NewCreateBatchOK() *CreateBatchOK {
	return &CreateBatchOK{}
}

/*
CreateBatchOK describes a response with status code 200, with default header values.

Successful create batch
*/
type CreateBatchOK struct {
	Payload *models.BatchStatus
}

// IsSuccess returns true when this create batch o k response has a 2xx status code
func (o *CreateBatchOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this create batch o k response has a 3xx status code
func (o *CreateBatchOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create batch o k response has a 4xx status code
func (o *CreateBatchOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this create batch o k response has a 5xx status code
func (o *CreateBatchOK) IsServerError() bool {
	return false
}

// IsCode returns true when this create batch o k response a status code equal to that given
func (o *CreateBatchOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the create batch o k response
func (o *CreateBatchOK) Code() int {
	return 200
}

func (o *CreateBatchOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /batches][%d] createBatchOK %s", 200, payload)
}

func (o *CreateBatchOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /batches][%d] createBatchOK %s", 200, payload)
}

func (o *CreateBatchOK) GetPayload() *models.BatchStatus {
	return o.Payload
}

func (o *CreateBatchOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.BatchStatus)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateBatchBadRequest creates a CreateBatchBadRequest with default headers values
func NewCreateBatchBadRequest() *CreateBatchBadRequest {
	return &CreateBatchBadRequest{}
}

/*
CreateBatchBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type CreateBatchBadRequest struct {
	Payload *models.Status
}

// IsSuccess returns true when this create batch bad request response has a 2xx status code
func (o *CreateBatchBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create batch bad request response has a 3xx status code
func (o *CreateBatchBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create batch bad request response has a 4xx status code
func (o *CreateBatchBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this create batch bad request response has a 5xx status code
func (o *CreateBatchBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this create batch bad request response a status code equal to that given
func (o *CreateBatchBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the create batch bad request response
func (o *CreateBatchBadRequest) Code() int {
	return 400
}

func (o *CreateBatchBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /batches][%d] createBatchBadRequest %s", 400, payload)
}

func (o *CreateBatchBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /batches][%d] createBatchBadRequest %s", 400, payload)
}

func (o *CreateBatchBadRequest) GetPayload() *models.Status {
	return o.Payload
}

func (o *CreateBatchBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Status)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateBatchNotFound creates a CreateBatchNotFound with default headers values
func NewCreateBatchNotFound() *CreateBatchNotFound {
	return &CreateBatchNotFound{}
}

/*
CreateBatchNotFound describes a response with status code 404, with default header values.

Not found
*/
type CreateBatchNotFound struct {
	Payload *models.Status
}

// IsSuccess returns true when this create batch not found response has a 2xx status code
func (o *CreateBatchNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create batch not found response has a 3xx status code
func (o *CreateBatchNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create batch not found response has a 4xx status code
func (o *CreateBatchNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this create batch not found response has a 5xx status code
func (o *CreateBatchNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this create batch not found response a status code equal to that given
func (o *CreateBatchNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the create batch not found response
func (o *CreateBatchNotFound) Code() int {
	return 404
}

func (o *CreateBatchNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /batches][%d] createBatchNotFound %s", 404, payload)
}

func (o *CreateBatchNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /batches][%d] createBatchNotFound %s", 404, payload)
}

func (o *CreateBatchNotFound) GetPayload() *models.Status {
	return o.Payload
}

func (o *CreateBatchNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Status)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateBatchUnprocessableEntity creates a CreateBatchUnprocessableEntity with default headers values
func NewCreateBatchUnprocessableEntity() *CreateBatchUnprocessableEntity {
	return &CreateBatchUnprocessableEntity{}
}

/*
CreateBatchUnprocessableEntity describes a response with status code 422, with default header values.

Invalid data in request
*/
type CreateBatchUnprocessableEntity struct {
	Payload *models.Status
}

// IsSuccess returns true when this create batch unprocessable entity response has a 2xx status code
func (o *CreateBatchUnprocessableEntity) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create batch unprocessable entity response has a 3xx status code
func (o *CreateBatchUnprocessableEntity) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create batch unprocessable entity response has a 4xx status code
func (o *CreateBatchUnprocessableEntity) IsClientError() bool {
	return true
}

// IsServerError returns true when this create batch unprocessable entity response has a 5xx status code
func (o *CreateBatchUnprocessableEntity) IsServerError() bool {
	return false
}

// IsCode returns true when this create batch unprocessable entity response a status code equal to that given
func (o *CreateBatchUnprocessableEntity) IsCode(code int) bool {
	return code == 422
}

// Code gets the status code for the create batch unprocessable entity response
func (o *CreateBatchUnprocessableEntity) Code() int {
	return 422
}

func (o *CreateBatchUnprocessableEntity) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /batches][%d] createBatchUnprocessableEntity %s", 422, payload)
}

func (o *CreateBatchUnprocessableEntity) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /batches][%d] createBatchUnprocessableEntity %s", 422, payload)
}

func (o *CreateBatchUnprocessableEntity) GetPayload() *models.Status {
	return o.Payload
}

func (o *CreateBatchUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Status)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateBatchInternalServerError creates a CreateBatchInternalServerError with default headers values
func NewCreateBatchInternalServerError() *CreateBatchInternalServerError {
	return &CreateBatchInternalServerError{}
}

/*
CreateBatchInternalServerError describes a response with status code 500, with default header values.

Internal server error
*/
type CreateBatchInternalServerError struct {
	Payload *models.Status
}

// IsSuccess returns true when this create batch internal server error response has a 2xx status code
func (o *CreateBatchInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create batch internal server error response has a 3xx status code
func (o *CreateBatchInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create batch internal server error response has a 4xx status code
func (o *CreateBatchInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this create batch internal server error response has a 5xx status code
func (o *CreateBatchInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this create batch internal server error response a status code equal to that given
func (o *CreateBatchInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the create batch internal server error response
func (o *CreateBatchInternalServerError) Code() int {
	return 500
}

func (o *CreateBatchInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /batches][%d] createBatchInternalServerError %s", 500, payload)
}

func (o *CreateBatchInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /batches][%d] createBatchInternalServerError %s", 500, payload)
}

func (o *CreateBatchInternalServerError) GetPayload() *models.Status {
	return o.Payload
}

func (o *CreateBatchInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Status)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
